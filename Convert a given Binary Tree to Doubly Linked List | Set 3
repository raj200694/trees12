#include <iostream>
using namespace std;

struct Node{
    int data;
    struct Node* left,*right;
};
struct Node* newNode(int data){
    Node* temp = new Node;
    temp->data=data;
    temp->left=temp->right=NULL;
    return temp;
}
void BinaryTree2DoubleLinkedList(struct Node* root,struct Node** head){
    static struct Node* prev=NULL;
    if(root==NULL){
        return;
    }
    BinaryTree2DoubleLinkedList(root->left,head);
    if(prev==NULL){
        *head=root;
    }
    else{
        root->left=prev;
        prev->right=root;
    }
    prev=root;
    BinaryTree2DoubleLinkedList(root->right,head);
}

  
void printList(Node *node) 
{ 
    while (node!=NULL) 
    { 
        cout << node->data << " "; 
        node = node->right; 
    } 
} 
  
/* Driver program to test above functions*/
int main() 
{ 
    // Let us create the tree shown in above diagram 
    Node *root        = newNode(10); 
    root->left        = newNode(12); 
    root->right       = newNode(15); 
    root->left->left  = newNode(25); 
    root->left->right = newNode(30); 
    root->right->left = newNode(36); 
  
    // Convert to DLL 
    Node *head = NULL; 
    BinaryTree2DoubleLinkedList(root, &head); 
  
    // Print the converted list 
    printList(head); 
  
    return 0; 
}

